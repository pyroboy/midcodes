import { c as create_ssr_component, e as escape, b as each, a as add_attribute } from "../../../chunks/ssr.js";
import { R as RoleConfig } from "../../../chunks/roleConfig.js";
const css = {
  code: ".dark{color-scheme:dark}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { RoleConfig } from \\"$lib/auth/roleConfig\\";\\nexport let data;\\nconst role = data.profile?.role || \\"id_gen_user\\";\\nconst roleConfig = RoleConfig[role];\\nconst allowedPaths = roleConfig.allowedPaths.filter((path) => path.showInNav);\\nfunction formatDate(dateStr) {\\n  return new Date(dateStr).toLocaleDateString(\\"en-US\\", {\\n    year: \\"numeric\\",\\n    month: \\"short\\",\\n    day: \\"numeric\\",\\n    hour: \\"2-digit\\",\\n    minute: \\"2-digit\\"\\n  });\\n}\\nfunction getIdNumber(data2) {\\n  try {\\n    return data2?.id_number || \\"N/A\\";\\n  } catch (e) {\\n    return \\"N/A\\";\\n  }\\n}\\nfunction getName(data2) {\\n  try {\\n    return data2?.full_name || \\"N/A\\";\\n  } catch (e) {\\n    return \\"N/A\\";\\n  }\\n}\\n<\/script>\\n\\n<style>\\n    :global(.dark) {\\n        color-scheme: dark;\\n    }\\n</style>\\n\\n<div class=\\"container mx-auto px-4 py-8\\">\\n    <!-- Welcome Section -->\\n    <div class=\\"card-content bg-white rounded-lg shadow-md p-6 mb-8\\">\\n        <h1 class=\\"text-3xl font-bold mb-2\\">Welcome, {data.profile?.email || data.user?.email}</h1>\\n        <p class=\\"text-gray-600\\">Role: {roleConfig.label}</p>\\n        {#if data.profile?.org_id}\\n            <p class=\\"text-gray-600\\">Organization ID: {data.profile.org_id}</p>\\n        {/if}\\n    </div>\\n\\n    <!-- Quick Stats -->\\n    <div class=\\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\\">\\n        <div class=\\"card-content rounded-lg shadow-md p-6\\">\\n            <h3 class=\\"text-lg font-semibold mb-2\\">Total ID Cards</h3>\\n            <p class=\\"text-3xl font-bold text-primary\\">{data.totalCards}</p>\\n        </div>\\n        <!-- Add more stat cards as needed -->\\n    </div>\\n\\n    <!-- Navigation Links -->\\n    <div class=\\"card-content rounded-lg shadow-md p-6 mb-8\\">\\n        <h2 class=\\"text-2xl font-bold mb-4\\">Quick Actions</h2>\\n        <div class=\\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\\">\\n            {#each allowedPaths as { path, label }}\\n                <a \\n                    href={path.replace('/**', '')} \\n                    class=\\"block p-4 bg-muted hover:bg-muted/80 rounded-lg transition-colors duration-200\\"\\n                >\\n                    <h3 class=\\"text-lg font-semibold mb-1\\">{label}</h3>\\n                </a>\\n            {/each}\\n        </div>\\n    </div>\\n\\n    <!-- Recent Activity -->\\n    {#if data.error}\\n        <div class=\\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-8\\">\\n            <p>Error loading recent activity. Please try again later.</p>\\n        </div>\\n    {:else if data.recentCards?.length > 0}\\n        <div class=\\"card-content bg-white rounded-lg shadow-md p-6\\">\\n            <h2 class=\\"text-2xl font-bold mb-4\\">Recent ID Cards</h2>\\n            <div class=\\"overflow-x-auto\\">\\n                <table class=\\"min-w-full table-auto\\">\\n                    <thead>\\n                        <tr class=\\"bg-muted\\">\\n                            <th class=\\"px-4 py-2 text-left\\">ID</th>\\n                            <th class=\\"px-4 py-2 text-left\\">ID Number</th>\\n                            <th class=\\"px-4 py-2 text-left\\">Name</th>\\n                            <th class=\\"px-4 py-2 text-left\\">Created At</th>\\n                            <th class=\\"px-4 py-2 text-left\\">Has Images</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        {#each data.recentCards as card}\\n                            <tr class=\\"border-t hover:bg-gray-50\\">\\n                                <td class=\\"px-4 py-2 font-mono text-sm\\">{card.id}</td>\\n                                <td class=\\"px-4 py-2\\">{getIdNumber(card.data)}</td>\\n                                <td class=\\"px-4 py-2\\">{getName(card.data)}</td>\\n                                <td class=\\"px-4 py-2\\">{formatDate(card.created_at)}</td>\\n                                <td class=\\"px-4 py-2\\">\\n                                    <div class=\\"flex gap-2\\">\\n                                        {#if card.front_image}\\n                                            <span class=\\"px-2 py-1 text-sm bg-green-100 text-green-800 rounded-full\\">Front</span>\\n                                        {/if}\\n                                        {#if card.back_image}\\n                                            <span class=\\"px-2 py-1 text-sm bg-green-100 text-green-800 rounded-full\\">Back</span>\\n                                        {/if}\\n                                        {#if !card.front_image && !card.back_image}\\n                                            <span class=\\"px-2 py-1 text-sm bg-gray-100 text-gray-800 rounded-full\\">No Images</span>\\n                                        {/if}\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                        {/each}\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    {:else}\\n        <div class=\\"bg-white rounded-lg shadow-md p-6 text-center text-gray-500\\">\\n            <p>No ID cards generated yet.</p>\\n        </div>\\n    {/if}\\n</div>\\n"],"names":[],"mappings":"AA+BY,KAAO,CACX,YAAY,CAAE,IAClB"}`
};
function formatDate(dateStr) {
  return new Date(dateStr).toLocaleDateString("en-US", {
    year: "numeric",
    month: "short",
    day: "numeric",
    hour: "2-digit",
    minute: "2-digit"
  });
}
function getIdNumber(data2) {
  try {
    return data2?.id_number || "N/A";
  } catch (e) {
    return "N/A";
  }
}
function getName(data2) {
  try {
    return data2?.full_name || "N/A";
  } catch (e) {
    return "N/A";
  }
}
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { data } = $$props;
  const role = data.profile?.role || "id_gen_user";
  const roleConfig = RoleConfig[role];
  const allowedPaths = roleConfig.allowedPaths.filter((path) => path.showInNav);
  if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
  $$result.css.add(css);
  return `<div class="container mx-auto px-4 py-8"> <div class="card-content bg-white rounded-lg shadow-md p-6 mb-8"><h1 class="text-3xl font-bold mb-2">Welcome, ${escape(data.profile?.email || data.user?.email)}</h1> <p class="text-gray-600">Role: ${escape(roleConfig.label)}</p> ${data.profile?.org_id ? `<p class="text-gray-600">Organization ID: ${escape(data.profile.org_id)}</p>` : ``}</div>  <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8"><div class="card-content rounded-lg shadow-md p-6"><h3 class="text-lg font-semibold mb-2" data-svelte-h="svelte-9uvrbj">Total ID Cards</h3> <p class="text-3xl font-bold text-primary">${escape(data.totalCards)}</p></div> </div>  <div class="card-content rounded-lg shadow-md p-6 mb-8"><h2 class="text-2xl font-bold mb-4" data-svelte-h="svelte-3nlria">Quick Actions</h2> <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">${each(allowedPaths, ({ path, label }) => {
    return `<a${add_attribute("href", path.replace("/**", ""), 0)} class="block p-4 bg-muted hover:bg-muted/80 rounded-lg transition-colors duration-200"><h3 class="text-lg font-semibold mb-1">${escape(label)}</h3> </a>`;
  })}</div></div>  ${data.error ? `<div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-8" data-svelte-h="svelte-10z42rt"><p>Error loading recent activity. Please try again later.</p></div>` : `${data.recentCards?.length > 0 ? `<div class="card-content bg-white rounded-lg shadow-md p-6"><h2 class="text-2xl font-bold mb-4" data-svelte-h="svelte-1ocdpnv">Recent ID Cards</h2> <div class="overflow-x-auto"><table class="min-w-full table-auto"><thead data-svelte-h="svelte-o00ae4"><tr class="bg-muted"><th class="px-4 py-2 text-left">ID</th> <th class="px-4 py-2 text-left">ID Number</th> <th class="px-4 py-2 text-left">Name</th> <th class="px-4 py-2 text-left">Created At</th> <th class="px-4 py-2 text-left">Has Images</th></tr></thead> <tbody>${each(data.recentCards, (card) => {
    return `<tr class="border-t hover:bg-gray-50"><td class="px-4 py-2 font-mono text-sm">${escape(card.id)}</td> <td class="px-4 py-2">${escape(getIdNumber(card.data))}</td> <td class="px-4 py-2">${escape(getName(card.data))}</td> <td class="px-4 py-2">${escape(formatDate(card.created_at))}</td> <td class="px-4 py-2"><div class="flex gap-2">${card.front_image ? `<span class="px-2 py-1 text-sm bg-green-100 text-green-800 rounded-full" data-svelte-h="svelte-g5ev0i">Front</span>` : ``} ${card.back_image ? `<span class="px-2 py-1 text-sm bg-green-100 text-green-800 rounded-full" data-svelte-h="svelte-n9be00">Back</span>` : ``} ${!card.front_image && !card.back_image ? `<span class="px-2 py-1 text-sm bg-gray-100 text-gray-800 rounded-full" data-svelte-h="svelte-jobszw">No Images</span>` : ``} </div></td> </tr>`;
  })}</tbody></table></div></div>` : `<div class="bg-white rounded-lg shadow-md p-6 text-center text-gray-500" data-svelte-h="svelte-1yc40kp"><p>No ID cards generated yet.</p></div>`}`}</div>`;
});
export {
  Page as default
};
